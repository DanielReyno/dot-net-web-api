// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPITesting.Data;

#nullable disable

namespace WebAPITesting.Migrations
{
    [DbContext(typeof(HotelsDbContext))]
    [Migration("20250429141759_SeededDataMigration")]
    partial class SeededDataMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebAPITesting.Data.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryId");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryId = 1,
                            Name = "Republica Dominicana",
                            ShortName = "Rep Dom"
                        },
                        new
                        {
                            CountryId = 2,
                            Name = "Estados Unidos",
                            ShortName = "US"
                        },
                        new
                        {
                            CountryId = 3,
                            Name = "Espana",
                            ShortName = "ES"
                        });
                });

            modelBuilder.Entity("WebAPITesting.Data.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Location = "Punta cana",
                            Name = "Hotel Punta cana",
                            Price = 500
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 2,
                            Location = "Los angeles",
                            Name = "Los Angeles Hotel",
                            Price = 1000
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 3,
                            Location = "Madrid",
                            Name = "Hotel Real",
                            Price = 800
                        });
                });

            modelBuilder.Entity("WebAPITesting.Data.Hotel", b =>
                {
                    b.HasOne("WebAPITesting.Data.Country", "Country")
                        .WithMany("Hotels")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("WebAPITesting.Data.Country", b =>
                {
                    b.Navigation("Hotels");
                });
#pragma warning restore 612, 618
        }
    }
}
